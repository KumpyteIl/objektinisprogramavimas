     #include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <numeric>
#include <limits>


struct studentas {
    std::string Vardas, Pavarde;
    std::vector<int> pazymiai = {};
    int egzaminas;
    float GP = 0;
};

void duomenu_nuskaitymas(studentas Student[], int i) 
{
    std::cout << "IVESKITE STUDENTO NR. " << i + 1 << " DUOMENIS.\n";
    std::cout << "Studento nr. " << i + 1 << " vardas yra:\n";
    std::cin >> Student[i].Vardas;
    std::cout << "Studento nr. " << i + 1 << " pavarde yra:\n";
    std::cin >> Student[i].Pavarde;
    std::cout << "Studento nr. " << i + 1 << " egzamino ivertinimas yra:\n";
    for (;;) 
    {
        if (std::cin >> Student[i].egzaminas && Student[i].egzaminas > 0 && Student[i].egzaminas <= 10) 
        {
            break;
        }
        else 
        {
            if (std::cin.eof()) break;
            std::cout << "Neteisingai ivedete egzamino ivertinima - bandykite dar karta:\n";
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
            std::cout << std::endl;
        }
    }
}

void ivedimas(studentas Student[], int i) 
{
    int a;
    std::cout << "Iveskite studento pazymi (suvedus visus pazymius, iveskite -1):\n";
    for (;;)
    {
        std::cout << "Iveskite studento pazymi:\n";
        if (std::cin >> a && a <= 10 && a != 0 && a >= -1)
        {
            if (a != -1)
            {
                Student[i].pazymiai.push_back(a);
            }
            else
            {
                break;
            }
        }
        else
        {
            if (std::cin.eof()) break;
            std::cout << "Neteisingai ivedete studento pazymi - bandykite dar karta:\n";
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
        }
    }
}

void vidurkio_galutinis_pazymys(studentas Student[], int stud_skaicius)
{
    float sum;
    float vid;
    int elementu_sk;
    for (int i = 0; i < stud_skaicius; i++) {
        sum = std::accumulate(Student[i].pazymiai.begin(), Student[i].pazymiai.end(), 0);
        elementu_sk = (Student[i].pazymiai.size());
        vid = sum / (Student[i].pazymiai.size());
        Student[i].GP = vid * 0.4 + Student[i].egzaminas * 0.6;
    }
}

void isvedimas(studentas Student[], int stud_skaicius) 
{
    for (int i = 0; i < stud_skaicius; i++)
    {
        std::cout << std::setw(20) << std::left << Student[i].Vardas
            << std::setw(20) << std::left << Student[i].Pavarde
            << std::setw(16) << std::left << Student[i].GP << std::endl;
    }
    std::cout << "\n";
}

int main()
{
    std::cout << "\n\n";
    int stud_skaicius;
    std::string b;
    std::string c;
    studentas Student[30];
    std::cout << "Iveskite studentu skaiciu:\n";
    for (;;) 
        {
        if (std::cin >> stud_skaicius) 
        {
            break;
        }
        else 
        {
            if (std::cin.eof()) break;
            std::cout << "Neteisingai ivedete studentu skaiciu - bandykite dar karta:\n";
            std::cin.clear();
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
        }
    }
    for (int i = 0; i < stud_skaicius; i++)
    {
        duomenu_nuskaitymas(Student, i);
        ivedimas(Student, i);
    }
    std::cout << std::setw(20) << std::left << "Vardas"
              << std::setw(20) << std::left << "Pavarde";
    std::cout << std::setw(16) << std::left << "Galutinis(vid.)\n"
              << std::left << "-------------------------------------------------------\n";
    vidurkio_galutinis_pazymys(Student, stud_skaicius);
    isvedimas(Student, stud_skaicius);
    return 0;
}
